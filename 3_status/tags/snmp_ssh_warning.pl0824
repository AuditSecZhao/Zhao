#!/usr/bin/perl
use strict;
use warnings;

use DBI;
use DBD::mysql;
use Mail::Sender;
use Encode;
use URI::Escape;
use LWP::Simple;

our $time_now_utc = time;
my($min,$hour,$mday,$mon,$year) = (localtime $time_now_utc)[1..5];
($min,$hour,$mday,$mon,$year) = (sprintf("%02d", $min),sprintf("%02d", $hour),sprintf("%02d", $mday),sprintf("%02d", $mon + 1),$year+1900);
our $time_now_str = "$year$mon$mday$hour$min"."00";
our $time_now_subject = "$year-$mon-$mday $hour:$min";

our %device_errlog;
our %email_errlog;
our %device_status;

our $dbh=DBI->connect("DBI:mysql:database=audit_sec;host=localhost;mysql_connect_timeout=5","root","",{RaiseError=>1});
our $utf8 = $dbh->prepare("set names utf8");
$utf8->execute();
$utf8->finish();

our $mail = $dbh->prepare("select mailserver,account,password from alarm");
$mail->execute();
our $ref_mail = $mail->fetchrow_hashref();
our $mailserver = $ref_mail->{"mailserver"};
our $mailfrom = $ref_mail->{"account"};
our $mailpwd = $ref_mail->{"password"};
$mail->finish();

my $sqr_select = $dbh->prepare("select device_ip,datetime,type,disk,context from snmp_status_warning_log where mail_status = -1");
$sqr_select->execute();
while(my $ref_select = $sqr_select->fetchrow_hashref())
{
	my $device_ip = $ref_select->{"device_ip"};
	my $datetime = $ref_select->{"datetime"};
	my $type = $ref_select->{"type"};
	my $disk = $ref_select->{"disk"};
	my $context = $ref_select->{"context"};

	unless(exists $device_errlog{$device_ip})
	{
		$device_errlog{$device_ip} = "$device_ip $datetime 告警:\n$context\n";
	}
	else
	{
		$device_errlog{$device_ip} .= "$context\n";
	}

	unless(exists $device_status{$device_ip})
	{
		my @types;
		my @disks;

		if(defined $disk)
		{
			push @disks,$disk;
		}
		elsif(defined $type)
		{
			push @types,$type;
		}

		my @tmp_arr = (\@types,\@disks,1);
		$device_status{$device_ip} = \@tmp_arr;
	}
	else
	{
		if(defined $disk)
		{
			push @{$device_status{$device_ip}->[1]},$disk;
		}
		elsif(defined $type)
		{
			push @{$device_status{$device_ip}->[0]},$type;
		}
	}
}
$sqr_select->finish();

foreach my $device_ip(keys %device_errlog)
{
	my $is_exist = 0;
	$sqr_select = $dbh->prepare("select email from member where uid IN(select memberid from snmp_alert_user a left join snmp_alert b on a.snmp_alert_id=b.seq where b.groupid=(select groupid from servers where device_ip='$device_ip') and b.enable=1) and email != ''");
	$sqr_select->execute();
	while(my $ref_select = $sqr_select->fetchrow_hashref())
	{
		$is_exist = 1;
		my $email = $ref_select->{"email"};
		unless(defined $email)
		{
			next;
		}

		unless(exists $email_errlog{$email})
		{
			my @tmp_device = ($device_ip);
			my @tmp_arr = (\@tmp_device,undef);

			$email_errlog{$email} = \@tmp_arr;
			$email_errlog{$email}->[1] = $device_errlog{$device_ip};
		}
		else
		{
			push @{$email_errlog{$email}->[0]}, $device_ip;
			$email_errlog{$email}->[1] .= $device_errlog{$device_ip};
		}
	}
	$sqr_select->finish();

	if($is_exist == 0)
	{
		$device_status{$device_ip}->[2] = 2;
	}
}

foreach my $mailto(keys %email_errlog)
{
	my $subject = "主机监控告警 $time_now_subject";
	my $status = &send_mail($mailto,$subject,$email_errlog{$mailto}->[1],$mailserver,$mailfrom,$mailpwd);
#	my $status = &send_mail('wxl890206@126.com',$subject,$email_errlog{$mailto}->[1],$mailserver,$mailfrom,$mailpwd);

	if($status == 2)
	{
		foreach my $device_ip(@{$email_errlog{$mailto}->[0]})
		{
			$device_status{$device_ip}->[2] = $status;
		}
	}
}

foreach my $device_ip(keys %device_status)
{
	my @types = @{$device_status{$device_ip}->[0]};
	my @disks = @{$device_status{$device_ip}->[1]};
	my $status = $device_status{$device_ip}->[2];

	my $sqr_update = $dbh->prepare("update snmp_status_warning_log set mail_status = $status where device_ip = '$device_ip' and mail_status = -1");
	$sqr_update->execute();
	$sqr_update->finish();

	if($status == 1)
	{
		if(scalar @types == 0 && scalar @disks == 0)
		{
			my $sqr_update = $dbh->prepare("update snmp_status set last_sendtime = '$time_now_str' where device_ip = '$device_ip'");
			$sqr_update->execute();
			$sqr_update->finish();
		}
		else
		{
			foreach my $type(@types)
			{
				my $sqr_update = $dbh->prepare("update snmp_status set last_sendtime = '$time_now_str' where device_ip = '$device_ip' and type = '$type'");
				$sqr_update->execute();
				$sqr_update->finish();
			}

			foreach my $disk(@disks)
			{
				my $sqr_update = $dbh->prepare("update snmp_status set last_sendtime = '$time_now_str' where device_ip = '$device_ip' and type = 'disk' and disk = '$disk'");
				$sqr_update->execute();
				$sqr_update->finish();
			}
		}
	}
}

sub send_mail
{
	my($mailto,$subject,$msg,$mailserver,$mailfrom,$mailpwd) = @_;

	my $sender = new Mail::Sender;
#   $subject = encode_mimewords($subject,'Charset','UTF-8');
	$subject =  encode("gb2312", decode("utf8", $subject));           #freesvr 专用
#   $msg = encode_mimewords($msg,'Charset','gb2312');
		$msg =  encode("gb2312", decode("utf8", $msg));              #freesvr 专用

		if ($sender->MailMsg({
					smtp => $mailserver,
					from => $mailfrom,
					to => $mailto,
					subject => $subject,
					msg => $msg,
					auth => 'LOGIN',
					authid => $mailfrom,
					authpwd => $mailpwd,
#               encoding => 'gb2312',
					})<0){
			return 2;
		}
		else
		{
			return 1;
		}
}

